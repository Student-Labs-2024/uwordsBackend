name: CI

on:
  pull_request:
    branches:
      - main
      - develop
  push:
    branches:
      - main
      - develop


jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v1

    - name: Setup Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.11.3

    - name: Cache virtualenv
      uses: actions/cache@v3
      with:
        key: venv-${{ runner.os }}-${{ steps.setup_python.outputs.python-version}}-${{ hashFiles('requirements.txt') }}
        path: .venv

    - name: Install dependencies
      run: |
        python -m pip install -r requirements.txt

    - name: Configure .env
      run: |
        touch .env
        echo POSTGRES_DB=${{ secrets.TEST_POSTGRES_DB }} >> .env
        echo POSTGRES_HOST=${{ secrets.TEST_POSTGRES_HOST }} >> .env
        echo POSTGRES_PORT=${{ secrets.TEST_POSTGRES_PORT }} >> .env
        echo POSTGRES_USER=${{ secrets.TEST_POSTGRES_USER }} >> .env
        echo POSTGRES_PASSWORD=${{ secrets.TEST_POSTGRES_PASSWORD }} >> .env
        echo REDIS_URL=${{ secrets.TEST_REDIS_URL }} >> .env
        echo REDIS_HOST=${{ secrets.TEST_REDIS_HOST }} >> .env
        echo REDIS_PORT=${{ secrets.TEST_REDIS_PORT }} >> .env
        echo REDIS_PASS=${{ secrets.TEST_REDIS_PASS }} >> .env
        echo MINIO_ENDPOINT=${{ secrets.TEST_MINIO_ENDPOINT }} >> .env
        echo MINIO_ROOT_USER=${{ secrets.TEST_MINIO_ROOT_USER }} >> .env
        echo MINIO_ROOT_PASSWORD=${{ secrets.TEST_MINIO_ROOT_PASSWORD }} >> .env
        echo MINIO_BUCKET_NAME=${{ secrets.TEST_MINIO_BUCKET_NAME }} >> .env
        echo MINIO_BUCKET_VOICEOVER=${{ secrets.TEST_MINIO_BUCKET_VOICEOVER }} >> .env
        echo MINIO_BUCKET_PICTURE=${{ secrets.TEST_MINIO_BUCKET_PICTURE }} >> .env
        echo PIX_TOKEN=${{ secrets.TEST_PIX_TOKEN }} >> .env
        echo MINIO_HOST=${{ secrets.TEST_MINIO_HOST }} >> .env
        echo FASTAPI_SECRET=${{ secrets.TEST_FASTAPI_SECRET }} >> .env
        echo SENTRY_URL=${{ secrets.TEST_SENTRY_URL }} >> .env
        echo EMAIL_CODE_EXP=${{ secrets.TEST_EMAIL_CODE_EXP }} >> .env
        echo EMAIL_CODE_LEN=${{ secrets.TEST_EMAIL_CODE_LEN }} >> .env
        echo EMAIL_CODE_ATTEMPTS=${{ secrets.TEST_EMAIL_CODE_ATTEMPTS }} >> .env
        echo EMAIL_PORT=${{ secrets.TEST_EMAIL_PORT }} >> .env
        echo SMTP_SERVER=${{ secrets.TEST_SMTP_SERVER }} >> .env
        echo SENDER_EMAIL=${{ secrets.TEST_SENDER_EMAIL }} >> .env
        echo EMAIL_PASSWORD=${{ secrets.TEST_EMAIL_PASSWORD }} >> .env
        cat .env

    - name: Run linters
      run: |
        python -m black . --check

    - name: Run tests
      run: |
        python -m pytest
