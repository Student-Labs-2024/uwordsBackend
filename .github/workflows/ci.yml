name: CI

on:
  pull_request:
    branches:
      - main
      - develop


jobs:
  CI:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v1

    - name: Setup Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.11.3

    - name: Cache virtualenv
      uses: actions/cache@v3
      with:
        key: venv-${{ runner.os }}-${{ steps.setup_python.outputs.python-version}}-${{ hashFiles('requirements.txt') }}
        path: .venv

    - name: Install dependencies
      run: |
        python -m pip install -r requirements.txt

    - name: Run linters
      run: |
        python -m black . --check

    - name: Run tests
      env:
        POSTGRES_DB: ${{ secrets.TEST_POSTGRES_DB }}
        POSTGRES_HOST: ${{ secrets.TEST_POSTGRES_HOST }}
        POSTGRES_USER: ${{ secrets.TEST_POSTGRES_USER }}
        POSTGRES_PASSWORD: ${{ secrets.TEST_POSTGRES_PASSWORD }}
        POSTGRES_PORT: ${{ secrets.TEST_POSTGRES_PORT }}
        REDIS_URL: ${{ secrets.TEST_REDIS_URL }}
        REDIS_HOST: ${{ secrets.TEST_REDIS_HOST }}
        REDIS_PORT: ${{ secrets.TEST_REDIS_PORT }}
        REDIS_PASS: ${{ secrets.TEST_REDIS_PASS }}
        MINIO_ENDPOINT: ${{ secrets.TEST_MINIO_ENDPOINT }}
        MINIO_ROOT_USER: ${{ secrets.TEST_MINIO_ROOT_USER }}
        MINIO_ROOT_PASSWORD: ${{ secrets.TEST_MINIO_ROOT_PASSWORD }}
        MINIO_BUCKET_NAME: ${{ secrets.TEST_MINIO_BUCKET_NAME }}
        MINIO_BUCKET_VOICEOVER: ${{ secrets.TEST_MINIO_BUCKET_VOICEOVER }}
        MINIO_BUCKET_PICTURE: ${{ secrets.TEST_MINIO_BUCKET_PICTURE }}
        PIX_TOKEN: ${{ secrets.TEST_PIX_TOKEN }}
        MINIO_HOST: ${{ secrets.TEST_MINIO_HOST }}
        FASTAPI_SECRET: ${{ secrets.TEST_FASTAPI_SECRET }}
        SENTRY_URL: ${{ secrets.TEST_SENTRY_URL }}
        EMAIL_CODE_EXP: ${{ secrets.TEST_EMAIL_CODE_EXP }}
        EMAIL_CODE_LEN: ${{ secrets.TEST_EMAIL_CODE_LEN }}
        EMAIL_CODE_ATTEMPTS: ${{ secrets.TEST_EMAIL_CODE_ATTEMPTS }}
        EMAIL_PORT: ${{ secrets.TEST_EMAIL_PORT }}
        SMTP_SERVER: ${{ secrets.TEST_SMTP_SERVER }}
        SENDER_EMAIL: ${{ secrets.TEST_SENDER_EMAIL }}
        EMAIL_PASSWORD: ${{ secrets.TEST_EMAIL_PASSWORD }}
      run: |
        python -m pytest
